# configure your datasource
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/storedb
quarkus.datasource.username = dasun
quarkus.datasource.password = dasun
quarkus.datasource.db-kind=postgresql


# Run Flyway migrations automatically
# Execute Flyway automatically when the application starts
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.out-of-order=true
quarkus.flyway.locations=classpath:db/migration

# Solve the issue of inconsistent database ids
quarkus.id.new_generator_mappings=true
# TODO [WARNING] [io.quarkus.config] Unrecognized configuration key "quarkus.id.new_generator_mappings" was provided; it will be ignored; verify that the dependency extension for this configuration is set or that you did not make a typo

# Connect with oidc
quarkus.oidc.auth-server-url = http://localhost:8082/realms/new-realm

# Instead of @Authenticated
# /* -> All the rest api should be authenticated
quarkus.http.auth.permission.authenticated.paths=/*
# Quarkus provides 3 policies. Authenticated, Permit, Deny
quarkus.http.auth.permission.authenticated.policy=authenticated

# Instead of @PermitAll
# Let the following APIs be accessed without authenticating
quarkus.http.auth.permission.public-api.paths=/items/get, /items/get/*
quarkus.http.auth.permission.public-api.policy=permit

# Instead of @RolesAllowed
# For owner only
quarkus.http.auth.policy.owner-role-policy.roles-allowed=owner_role
quarkus.http.auth.permission.owner-role-api.paths=fake
quarkus.http.auth.permission.owner-role-api.policy=owner-role-policy

# For manager only
quarkus.http.auth.policy.manager-role-policy.roles-allowed=manager_role
quarkus.http.auth.permission.manager-role-api.paths=/items/add, /items/edit/*, /users/edit/*, /users/remove/*, /bills/edit/*, /bills/remove/*
quarkus.http.auth.permission.manager-role-api.policy=manager-role-policy

# For owner and manager
quarkus.http.auth.policy.owner-manager-shared-role-policy.roles-allowed=owner_role,manager_role
quarkus.http.auth.permission.owner-manager-shared-role-api.paths=/items/remove/*, /users/get, /users/get/*, /bills/get, /bills/get/*, /report/*
quarkus.http.auth.permission.owner-manager-shared-role-api.policy=owner-manager-shared-role-policy

# For employee only
quarkus.http.auth.policy.employee-role-policy.roles-allowed=employee_role
quarkus.http.auth.permission.employee-role-api.paths=/bills/add
quarkus.http.auth.permission.employee-role-api.policy=employee-role-policy

# For manager and employee
quarkus.http.auth.policy.manager-employee-shared-role-policy.roles-allowed=manager_role, employee_role
quarkus.http.auth.permission.manager-employee-shared-role-api.paths=/users/add
quarkus.http.auth.permission.manager-employee-shared-role-api.policy=manager-employee-shared-role-policy

# Here what has done is, First we make all the end points as authenticated
# Then we permit items/get and items/get/* endpoint
# Then we set paths according to the roles allowed
